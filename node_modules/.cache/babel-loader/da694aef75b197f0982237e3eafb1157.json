{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcu\\\\portfolio-website\\\\src\\\\pages\\\\Projects.js\";\nimport React from 'react';\nimport styles from '../styles/Projects.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  const projects = [{\n    id: 1,\n    title: \"Bachelor Thesis: Alzheimer's MRI Image Classification using Deep Learning\",\n    technologies: [\"Python\", \"PyTorch\", \"Scikit-learn\", \"ImageNet models\", \"NumPy\", \"Pandas\", \"CNN\"],\n    description: \"Development of a convolutional neural network (CNN) model to classify brain MRI images and detect patterns associated with Alzheimer's disease.\",\n    githubUrl: \"https://github.com/martacuevasr/Clasification_AlzheimerImages\",\n    image: \"/interfaz.png\" // Imagen de la interfaz del clasificador\n  }, {\n    id: 2,\n    title: \"Data Warehouse for Medication Expense Analysis in Hospitals\",\n    technologies: [\"ETL\", \"Power BI\", \"OLAP\", \"MDX\"],\n    description: \"Design of a system for hospital data analysis in the U.S. using ETL pipelines, OLAP cubes, and MDX queries. Development of interactive dashboards in Power BI to extract key insights on pharmaceutical expenses.\",\n    githubUrl: \"https://github.com/AlexSilvaa9/HealthcareDataWarehouse\",\n    image: \"/dashboard.png\" // Imagen del dashboard de Power BI\n  }, {\n    id: 3,\n    title: \"Web Application for Skin Disease Detection\",\n    technologies: [\"Python\", \"CNN\", \"TensorFlow\", \"FastAPI\"],\n    description: \"Review of the state of the art in clinical deep learning and development of a web application for detecting skin diseases from images. Implementation with deep vision models and web technologies.\",\n    githubUrl: \"https://github.com/AlexSilvaa9/skin_diseases_detection_web_app\",\n    image: \"/app2.jpeg\" // Primera imagen de la app de detecciÃ³n de piel\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.projectsPage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.pageTitle,\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.subtitle,\n        children: \"A collection of my work in health engineering and data science\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.projectsGrid,\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.projectCard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.projectImage,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: project.image,\n              alt: project.title,\n              onError: e => {\n                e.target.style.display = 'none';\n                e.target.nextSibling.style.display = 'flex';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.imagePlaceholder,\n              style: {\n                display: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.projectOverlay,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: project.githubUrl,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: styles.githubLink,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-github\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this), \"View Code\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.projectContent,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.projectTitle,\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.technologiesContainer,\n              children: project.technologies.map((tech, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.techTag,\n                children: tech\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.projectDescription,\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.projectActions,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: project.githubUrl,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: styles.actionButton,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-github\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), \"GitHub\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Projects","projects","id","title","technologies","description","githubUrl","image","className","projectsPage","children","container","pageTitle","fileName","_jsxFileName","lineNumber","columnNumber","subtitle","projectsGrid","map","project","projectCard","projectImage","src","alt","onError","e","target","style","display","nextSibling","imagePlaceholder","projectOverlay","href","rel","githubLink","projectContent","projectTitle","technologiesContainer","tech","index","techTag","projectDescription","projectActions","actionButton","_c","$RefreshReg$"],"sources":["C:/Users/marcu/portfolio-website/src/pages/Projects.js"],"sourcesContent":["import React from 'react';\nimport styles from '../styles/Projects.module.css';\n\nconst Projects = () => {\n    const projects = [\n        {\n            id: 1,\n            title: \"Bachelor Thesis: Alzheimer's MRI Image Classification using Deep Learning\",\n            technologies: [\"Python\", \"PyTorch\", \"Scikit-learn\", \"ImageNet models\", \"NumPy\", \"Pandas\", \"CNN\"],\n            description: \"Development of a convolutional neural network (CNN) model to classify brain MRI images and detect patterns associated with Alzheimer's disease.\",\n            githubUrl: \"https://github.com/martacuevasr/Clasification_AlzheimerImages\",\n            image: \"/interfaz.png\" // Imagen de la interfaz del clasificador\n        },\n        {\n            id: 2,\n            title: \"Data Warehouse for Medication Expense Analysis in Hospitals\",\n            technologies: [\"ETL\", \"Power BI\", \"OLAP\", \"MDX\"],\n            description: \"Design of a system for hospital data analysis in the U.S. using ETL pipelines, OLAP cubes, and MDX queries. Development of interactive dashboards in Power BI to extract key insights on pharmaceutical expenses.\",\n            githubUrl: \"https://github.com/AlexSilvaa9/HealthcareDataWarehouse\",\n            image: \"/dashboard.png\" // Imagen del dashboard de Power BI\n        },\n        {\n            id: 3,\n            title: \"Web Application for Skin Disease Detection\",\n            technologies: [\"Python\", \"CNN\", \"TensorFlow\", \"FastAPI\"],\n            description: \"Review of the state of the art in clinical deep learning and development of a web application for detecting skin diseases from images. Implementation with deep vision models and web technologies.\",\n            githubUrl: \"https://github.com/AlexSilvaa9/skin_diseases_detection_web_app\",\n            image: \"/app2.jpeg\" // Primera imagen de la app de detecciÃ³n de piel\n        }\n    ];\n\n    return (\n        <div className={styles.projectsPage}>\n            <div className={styles.container}>\n                <h1 className={styles.pageTitle}>Projects</h1>\n                <p className={styles.subtitle}>A collection of my work in health engineering and data science</p>\n                \n                <div className={styles.projectsGrid}>\n                    {projects.map((project) => (\n                        <div key={project.id} className={styles.projectCard}>\n                            <div className={styles.projectImage}>\n                                <img \n                                    src={project.image} \n                                    alt={project.title}\n                                    onError={(e) => {\n                                        e.target.style.display = 'none';\n                                        e.target.nextSibling.style.display = 'flex';\n                                    }}\n                                />\n                                <div className={styles.imagePlaceholder} style={{display: 'none'}}>\n                                    <i className=\"fas fa-code\"></i>\n                                </div>\n                                <div className={styles.projectOverlay}>\n                                    <a \n                                        href={project.githubUrl} \n                                        target=\"_blank\" \n                                        rel=\"noopener noreferrer\"\n                                        className={styles.githubLink}\n                                    >\n                                        <i className=\"fab fa-github\"></i>\n                                        View Code\n                                    </a>\n                                </div>\n                            </div>\n                            \n                            <div className={styles.projectContent}>\n                                <h3 className={styles.projectTitle}>{project.title}</h3>\n                                \n                                <div className={styles.technologiesContainer}>\n                                    {project.technologies.map((tech, index) => (\n                                        <span key={index} className={styles.techTag}>\n                                            {tech}\n                                        </span>\n                                    ))}\n                                </div>\n                                \n                                <p className={styles.projectDescription}>\n                                    {project.description}\n                                </p>\n                                \n                                <div className={styles.projectActions}>\n                                    <a \n                                        href={project.githubUrl} \n                                        target=\"_blank\" \n                                        rel=\"noopener noreferrer\"\n                                        className={styles.actionButton}\n                                    >\n                                        <i className=\"fab fa-github\"></i>\n                                        GitHub\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}